<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://gpe.cz/gpwebpay/additionalInfo/request" targetNamespace="http://gpe.cz/gpwebpay/additionalInfo/request" elementFormDefault="qualified" version="1.0">
	<xs:element name="additionalInfoRequest" type="additionalInfoRequest"/>
	<xs:complexType name="additionalInfoRequest">
		<xs:sequence>
			<xs:element name="cardholderInfo" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="cardholderDetails" minOccurs="0">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="name" type="cardholderNameValue" minOccurs="0"/>
									<!-- Cardholder/ user login ID which was used to access web store in case of access through Social Network (e.g. Facebook, Google…) -->
									<xs:element name="loginId" type="textValue" minOccurs="0"/>
									<!-- Mechanism used by the Cardholder to authenticate to the e-shop. -->
									<!-- Values accepted: 
										01 = No e-shop authentication occurred (i.e. cardholder “logged in” as guest)
										02 = Login to the cardholder account at the e-shop system using e-shop’s own credentials
										03 = Login to the cardholder account at the e-shop system using federated ID
										04 = Login to the cardholder account at the e-shop system using issuer credentials
										05 = Login to the cardholder account at the e-shop system using third-party authentication
										06 = Login to the cardholder account at the e-shop system using FIDO Authenticator -->
									<xs:element name="loginType" type="loginTypeValue" minOccurs="0"/>
									<!-- Date and time in UTC of the cardholder authentication. DateTime format = YYYYMMDDHHMM -->
									<xs:element name="loginTime" type="loginTimeValue" minOccurs="0"/>
									<!-- Additional information about the account optionally provided by the e-shop. -->
									<xs:element name="userAccountId" type="userAccountIdValue" minOccurs="0"/>
									<!-- Date that the cardholder opened the account with the e-shop. Date format = YYYYMMDD -->
									<xs:element name="userAccountCreatedDate" type="dateTypeValue" minOccurs="0"/>
									<!-- Length of time that the cardholder has had the account with the e-shop. -->
									<!-- Values accepted:
										01 = No account (guest check-out)
										02 = Created during this transaction
										03 = Less than 30 days
										04 = 30−60 days
										05 = More than 60 days -->
									<xs:element name="userAccountAge" type="userAccountAgeValue" minOccurs="0"/>
									<!-- Date that the cardholder’s account with the e-shopr was last changed, 
										including Billing or Shipping address, new payment account, or new user(s) added. 
										Date format = YYYYMMDD -->
									<xs:element name="userAccountLastChangeDate" type="dateTypeValue" minOccurs="0"/>
									<!-- Length of time since the cardholder’s account information with the e-shop was last changed, 
										including Billing or Shipping address, new payment account, or new user(s) added. -->
									<!-- Values accepted:
										01 = Changed during this transaction
										02 = Less than 30 days
										03 = 30−60 days
										04 = More than 60 days -->
									<xs:element name="userAccountLastChangeAge" type="userAccountLastChangeAgeValue" minOccurs="0"/>
									<!-- Date that cardholder’s account with the e-shop had a password change or account reset. Date format = YYYYMMDD -->
									<xs:element name="userAccountPasswordChangeDate" type="dateTypeValue" minOccurs="0"/>
									<!-- Indicates the length of time since the cardholder’s account with the e-shop had a password change or account reset. -->
									<!-- Values accepted:
										01 = No change
										02 = Changed during this transaction
										03 = Less than 30 days
										04 = 30−60 days
										05 = More than 60 days -->
									<xs:element name="userAccountPasswordChangeAge" type="userAccountPasswordChangeAgeValue" minOccurs="0"/>
									<xs:element name="socialNetworkId" type="textValue" minOccurs="0"/>
									<xs:element name="email" type="emailValue" minOccurs="0"/>
									<xs:sequence minOccurs="0" maxOccurs="1">
										<xs:element name="phoneCountry" type="phoneCountryValue"/>
										<xs:element name="phone" type="phoneValue"/>
									</xs:sequence>
									<xs:sequence minOccurs="0" maxOccurs="1">
										<xs:element name="mobilePhoneCountry" type="phoneCountryValue"/>
										<xs:element name="mobilePhone" type="phoneValue"/>
									</xs:sequence>
									<xs:sequence minOccurs="0" maxOccurs="1">
										<xs:element name="workPhoneCountry" type="phoneCountryValue"/>
										<xs:element name="workPhone" type="phoneValue"/>
									</xs:sequence>
									<xs:element name="clientIpAddress" type="ipValue" minOccurs="0"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<!-- Indicates whether the Cardholder Shipping Address and Cardholder Billing Address are the same. -->
						<!-- Values accepted:
							Y = Shipping Address matches Billing Address
							N = Shipping Address does not match Billing Address -->
						<xs:element name="addressMatch" type="addressMatchValue" minOccurs="0"/>
						<xs:element name="billingDetails" minOccurs="0">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="name" type="textValue"/>
									<xs:element name="address1" type="addressValue"/>
									<xs:element name="address2" type="addressValue" minOccurs="0"/>
									<xs:element name="address3" type="addressValue" minOccurs="0"/>
									<xs:element name="city" type="cityValue"/>
									<xs:element name="postalCode" type="postalCodeValue"/>
									<!-- the ISO 3166-1 numeric three-digit country code -->
									<xs:element name="country" type="countryValue"/>
									<!-- the country subdivision code defined in ISO 3166-2 -->
									<xs:element name="countrySubdivision" type="countrySubdivisionValue" minOccurs="0"/>
									<xs:element name="phone" type="phoneValue" minOccurs="0"/>
									<xs:element name="email" type="emailValue" minOccurs="0"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="shippingDetails" minOccurs="0">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="name" type="textValue"/>
									<xs:element name="address1" type="addressValue"/>
									<xs:element name="address2" type="addressValue" minOccurs="0"/>
									<xs:element name="address3" type="addressValue" minOccurs="0"/>
									<xs:element name="city" type="cityValue"/>
									<xs:element name="postalCode" type="postalCodeValue"/>
									<!-- the ISO 3166-1 numeric three-digit country code -->
									<xs:element name="country" type="countryValue"/>
									<!-- the country subdivision code defined in ISO 3166-2 -->
									<xs:element name="countrySubdivision" type="countrySubdivisionValue" minOccurs="0"/>
									<xs:element name="phone" type="phoneValue" minOccurs="0"/>
									<xs:element name="email" type="emailValue" minOccurs="0"/>
									<xs:element name="method" type="textValue" minOccurs="0"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="paymentInfo" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<!-- Identifies the type of transaction being authenticated. -->
						<!-- Values accepted:
							01 = Goods/ Service Purchase
							03 = Check Acceptance
							10 = Account Funding
							11 = Quasi-Cash Transaction
							28 = Prepaid Activation and Load -->
						<xs:element name="transactionType" type="transactionTypeValue" minOccurs="0"/>
						<!-- Indicates shipping method chosen for the transaction.
							Merchants must choose the Shipping Indicator code that most accurately describes the cardholder’s specific transaction, 
							not their general business. If one or more items are included in the sale, use the Shipping Indicator code for the physical goods,
							or if all digital goods, use the Shipping Indicator code that describes the most expensive item. -->
						<!-- Values accepted:
							01 = Ship to cardholder’s billing address
							02 = Ship to another verified address on file with merchant
							03 = Ship to address that is different than the cardholder’s billing address
							04 = “Ship to Store” / Pick-up at local store (Store address shall be populated in shipping address fields)
							05 = Digital goods (includes online services, electronic gift cards and redemption codes)
							06 = Travel and Event tickets, not shipped
							07 = Other (for example, Gaming, digital services not shipped, emedia subscriptions, etc.) -->
						<xs:element name="shippingIndicator" type="shippingIndicatorValue" minOccurs="0"/>
						<!-- Indicates whether Cardholder is placing an order for merchandise with a future availability or release date. -->
						<!-- Values accepted:
							01 = Merchandise available
							02 = Future availability -->
						<xs:element name="preOrderPurchaseInd" type="preOrderPurchaseIndValue" minOccurs="0"/>
						<!-- For a pre-ordered purchase, the expected date that the merchandise will be available. Date format = YYYYMMDD -->
						<xs:element name="preOrderDate" type="dateTypeValue" minOccurs="0"/>
						<!-- Indicates whether the cardholder is reordering previously purchased merchandise. -->
						<!-- Values accepted: SD_PAYMENT_INFO_IDENT (position 5-6)
							01 = First time ordered
							02 = Reordered -->
						<xs:element name="reorderItemsInd" type="reorderItemsIndValue" minOccurs="0"/>
						<!-- Indicates the merchandise delivery timeframe. -->
						<!-- Values accepted:
							01 = Electronic Delivery
							02 = Same day shipping
							03 = Overnight shipping
							04 = Two-day or more shipping -->
						<xs:element name="deliveryTimeframe" type="deliveryTimeframeValue" minOccurs="0"/>
						<!-- For Electronic delivery, the email address to which the merchandise was delivered. -->
						<xs:element name="deliveryEmailAddress" type="emailValue" minOccurs="0"/>
						<!-- For prepaid or gift card purchase, total count of individual prepaid or gift cards/codes purchased. -->
						<xs:element name="giftCardCount" type="giftCardCountValue" minOccurs="0"/>
						<!-- For prepaid or gift card purchase, the purchase amount total of prepaid or gift card(s) in major units 
							(for example, USD 123.45 is 123). -->
						<xs:element name="giftCardAmount" type="giftCardAmountValue" minOccurs="0"/>
						<!-- For prepaid or gift card purchase, the 3 digit currency code of the card as defined in ISO 4217 -->
						<xs:element name="giftCardCurrency" type="giftCardCurrencyValue" minOccurs="0"/>
						<!-- Date after which no further authorisations shall be performed. -->
						<!-- GP webpay doesn't generate future payments, it is used only for transaction analysis -->
						<xs:element name="recurringExpiry" type="dateTypeValue" minOccurs="0"/>
						<!-- Indicates the minimum number of days between authorisations. -->
						<xs:element name="recurringFrequency" type="recurringFrequencyValue" minOccurs="0"/>
						<!-- Mechant can provide infromation about good (e.g. for airtickets - destination) -->
						<xs:element name="remmitanceInfo1" type="remmitanceInfoValue" minOccurs="0"/>
						<xs:element name="remmitanceInfo2" type="remmitanceInfoValue" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="shoppingCartInfo" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<!-- Amount without decimal in smallest of given currency -->
						<xs:element name="taxAmount" type="amountValue" minOccurs="0"/>
						<xs:element name="shippingAmount" type="amountValue" minOccurs="0"/>
						<xs:element name="handlingAmount" type="amountValue" minOccurs="0"/>
						<!-- The sum values * prices of all items in cart -->
						<xs:element name="cartAmount" type="amountValue" minOccurs="0"/>
						<xs:element name="shoppingCartItems" minOccurs="0">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="shoppingCartItem" maxOccurs="unbounded">
										<xs:complexType>
											<xs:sequence>
												<xs:element name="itemCode" type="itemTypeValue" minOccurs="0"/>
												<xs:element name="itemDescription" type="itemDescriptionValue"/>
												<xs:element name="itemQuantity" type="quantityValue"/>
												<xs:element name="itemUnitPrice" type="amountValue"/>
												<xs:element name="itemClass" type="itemTypeValue" minOccurs="0"/>
												<xs:element name="itemType" type="itemTypeValue" minOccurs="0"/>
												<xs:element name="itemImageUrl" type="urlValue" minOccurs="0"/>
											</xs:sequence>
										</xs:complexType>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="walletDetails" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="requestShippingDetails" type="xs:boolean" minOccurs="0"/>
						<xs:element name="requestLoyaltyProgram" type="xs:boolean" minOccurs="0"/>
						<xs:element name="shippingLocationRestriction" type="shippingLocationRestrictionValue" minOccurs="0"/>
						<xs:element name="requestDeferredAuthorization" type="xs:boolean" minOccurs="0"/>
						<xs:element name="requestCardsDetails" type="xs:boolean" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="submerchantInfo" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="merchantId" type="merchantIdValue"/>
						<!-- MCC code -->
						<xs:element name="merchantType" type="merchantTypeValue"/>
						<xs:element name="merchantName" type="merchantNameValue"/>
						<xs:element name="merchantStreet" type="merchantStreetValue"/>
						<xs:element name="merchantCity" type="merchantCityValue"/>
						<xs:element name="merchantPostalCode" type="merchantPostalCodeValue"/>
						<xs:element name="merchantState" type="merchantStateValue" minOccurs="0"/>
						<!-- ISO 3166-1 Alpha-2 country code -->
						<xs:element name="merchantCountry" type="merchantCountryValue"/>
						<!-- Merchant/shop web pages - www.merchant.com -->
						<xs:element name="merchantWeb" type="merchantWebValue"/>
						<!-- Merchant's customer support phone -->
						<xs:element name="merchantServiceNumber" type="merchantServiceNumberValue"/>
						<!-- Merchant MC Assigned ID -->
						<xs:element name="merchantMcAssignedId" type="merchantMcAssignedIdValue" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="requestReturnInfo" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="requestCardsDetails" type="xs:boolean" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="altTerminalInfo" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="terminalId" type="terminalIdValue" minOccurs="0"/>
						<xs:element name="terminalOwner" type="terminalOwnerValue" minOccurs="0"/>
						<xs:element name="terminalCity" type="terminalCityValue" minOccurs="0"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="version" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:pattern value="\d+\.\d+"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:simpleType name="addressMatchValue">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Y"/>
			<xs:enumeration value="N"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="itemTypeValue">
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:maxLength value="20"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="quantityValue">
		<xs:restriction base="xs:unsignedLong">
			<xs:totalDigits value="12"/>
			<xs:minInclusive value="1"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="amountValue">
		<xs:restriction base="xs:unsignedLong">
			<xs:totalDigits value="12"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="textValue">
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:maxLength value="255"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="cardholderNameValue">
		<xs:restriction base="xs:string">
			<xs:minLength value="2"/>
			<xs:maxLength value="45"/>
			<xs:pattern value="[&#x21;-&#x7E;]+[&#x20;-&#x7E;]*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="addressValue">
		<xs:restriction base="xs:string">
			<xs:maxLength value="50"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="cityValue">
		<xs:restriction base="xs:string">
			<xs:maxLength value="50"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="postalCodeValue">
		<xs:restriction base="xs:string">
			<xs:maxLength value="16"/>
			<xs:pattern value="[\S].*[\S]"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="countryValue">
		<xs:restriction base="xs:string">
			<xs:pattern value="\d{3}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="countrySubdivisionValue">
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:maxLength value="3"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="phoneCountryValue">
		<xs:restriction base="xs:string">
			<xs:pattern value="\d{1,3}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="phoneValue">
		<xs:restriction base="xs:string">
			<xs:pattern value="\d{1,15}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="emailValue">
		<xs:restriction base="xs:string">
			<xs:minLength value="6"/>
			<xs:maxLength value="255"/>
			<xs:pattern value="([0-9a-zA-Z]([-_\+.\w]*[0-9a-zA-Z_-])*@([0-9a-zA-Z]*[-_\+\w]*[0-9a-zA-Z]\.)+[a-zA-Z]{2,20})"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ipV4">
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:maxLength value="255"/>
			<xs:pattern value="(25[0-5]|2[0-4]\d|[0-1]?\d?\d)(\.(25[0-5]|2[0-4]\d|[0-1]?\d?\d)){3}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ipV6">
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:maxLength value="255"/>
			<xs:pattern value="([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.{3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ipValue">
		<xs:union memberTypes="ipV4 ipV6"/>
	</xs:simpleType>
	<xs:simpleType name="itemDescriptionValue">
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:maxLength value="50"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="urlValue">
		<xs:restriction base="xs:anyURI">
			<xs:minLength value="1"/>
			<xs:maxLength value="2000"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="shippingLocationRestrictionValue">
		<xs:restriction base="xs:string">
			<xs:length value="2"/>
			<xs:pattern value="\w*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="merchantValueType">
		<xs:restriction base="xs:string">
			<xs:pattern value="[&#x21;-&#x7E;]+[&#x20;-&#x7E;]*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="merchantIdValue">
		<xs:restriction base="merchantValueType">
			<xs:minLength value="1"/>
			<xs:maxLength value="15"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="merchantTypeValue">
		<xs:restriction base="xs:string">
			<xs:length value="4"/>
			<xs:pattern value="\d{4}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="merchantNameValue">
		<xs:restriction base="merchantValueType">
			<xs:minLength value="1"/>
			<xs:maxLength value="22"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="merchantStreetValue">
		<xs:restriction base="merchantValueType">
			<xs:minLength value="1"/>
			<xs:maxLength value="25"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="merchantCityValue">
		<xs:restriction base="merchantValueType">
			<xs:minLength value="1"/>
			<xs:maxLength value="13"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="merchantPostalCodeValue">
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:maxLength value="10"/>
			<xs:pattern value="[\S].*[\S]"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="merchantStateValue">
		<xs:restriction base="xs:string">
			<xs:pattern value="\w{1,3}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="merchantCountryValue">
		<xs:restriction base="xs:string">
			<xs:length value="2"/>
			<xs:pattern value="[a-zA-Z]{2}"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="merchantWebValue">
		<xs:restriction base="merchantValueType">
			<xs:minLength value="1"/>
			<xs:maxLength value="25"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="merchantServiceNumberValue">
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:maxLength value="13"/>
			<xs:pattern value="\d+"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="terminalIdValue">
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:maxLength value="8"/>
			<xs:pattern value="[&#x21;-&#x7E;]*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="terminalOwnerValue">
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:maxLength value="22"/>
			<xs:pattern value="[&#x21;-&#x7E;]+[&#x20;-&#x7E;]*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="terminalCityValue">
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:maxLength value="13"/>
			<xs:pattern value="[&#x21;-&#x7E;]+[&#x20;-&#x7E;]*"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="merchantMcAssignedIdValue">
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:maxLength value="15"/>
			<xs:pattern value="[a-zA-Z0-9]+"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="loginTypeValue">
		<xs:restriction base="xs:string">
			<xs:enumeration value="01"/>
			<xs:enumeration value="02"/>
			<xs:enumeration value="03"/>
			<xs:enumeration value="04"/>
			<xs:enumeration value="05"/>
			<xs:enumeration value="06"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="loginTimeValue">
		<xs:restriction base="xs:string">
			<xs:length value="12"/>
			<xs:pattern value="([1-2]\d{3})(0[1-9]|1[0-2])(0[1-9]|[1-2][0-9]|3[0-1])(0[0-9]|1[0-9]|2[0-3])(0[0-9]|[1-5][0-9])"/>
			<!--pattern "YYYYMMDDhhmm"/-->
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="userAccountIdValue">
		<xs:restriction base="xs:string">
			<xs:maxLength value="40"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="dateTypeValue">
		<xs:restriction base="xs:string">
			<xs:length value="8"/>
			<xs:pattern value="([1-2]\d{3})(0[1-9]|1[0-2])(0[1-9]|[1-2][0-9]|3[0-1])"/>
			<!--pattern "YYYYMMDD"/-->
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="userAccountAgeValue">
		<xs:restriction base="xs:string">
			<xs:enumeration value="01"/>
			<xs:enumeration value="02"/>
			<xs:enumeration value="03"/>
			<xs:enumeration value="04"/>
			<xs:enumeration value="05"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="userAccountLastChangeAgeValue">
		<xs:restriction base="xs:string">
			<xs:enumeration value="01"/>
			<xs:enumeration value="02"/>
			<xs:enumeration value="03"/>
			<xs:enumeration value="04"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="userAccountPasswordChangeAgeValue">
		<xs:restriction base="xs:string">
			<xs:enumeration value="01"/>
			<xs:enumeration value="02"/>
			<xs:enumeration value="03"/>
			<xs:enumeration value="04"/>
			<xs:enumeration value="05"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="transactionTypeValue">
		<xs:restriction base="xs:string">
			<xs:enumeration value="01"/>
			<xs:enumeration value="03"/>
			<xs:enumeration value="10"/>
			<xs:enumeration value="11"/>
			<xs:enumeration value="28"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="shippingIndicatorValue">
		<xs:restriction base="xs:string">
			<xs:enumeration value="01"/>
			<xs:enumeration value="02"/>
			<xs:enumeration value="03"/>
			<xs:enumeration value="04"/>
			<xs:enumeration value="05"/>
			<xs:enumeration value="06"/>
			<xs:enumeration value="07"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="preOrderPurchaseIndValue">
		<xs:restriction base="xs:string">
			<xs:enumeration value="01"/>
			<xs:enumeration value="02"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="reorderItemsIndValue">
		<xs:restriction base="xs:string">
			<xs:enumeration value="01"/>
			<xs:enumeration value="02"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="deliveryTimeframeValue">
		<xs:restriction base="xs:string">
			<xs:enumeration value="01"/>
			<xs:enumeration value="02"/>
			<xs:enumeration value="03"/>
			<xs:enumeration value="04"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="giftCardCountValue">
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:maxLength value="2"/>
			<xs:pattern value="\d+"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="giftCardAmountValue">
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:maxLength value="15"/>
			<xs:pattern value="\d+"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="giftCardCurrencyValue">
		<xs:restriction base="xs:string">
			<xs:length value="3"/>
			<xs:pattern value="\d+"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="recurringFrequencyValue">
		<xs:restriction base="xs:string">
			<xs:minLength value="1"/>
			<xs:maxLength value="4"/>
			<xs:pattern value="\d+"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="remmitanceInfoValue">
		<xs:restriction base="xs:string">
			<xs:maxLength value="140"/>
			<!--only printable chars/-->
		</xs:restriction>
	</xs:simpleType>
</xs:schema>
